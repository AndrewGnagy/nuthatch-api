{
  "openapi": "3.0.1",
  "info": {
    "title": "Nuthatch api",
    "description": "Nuthatch api - an api for birding",
    "contact": {
      "email": "lastelmsoft@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "2.1.0"
  },
  "servers": [
    {
      "url": "https://nuthatch.lastelm.software/"
    },
    {
      "url": "http://nuthatch.lastelm.software/"
    },
    {
      "url": "http://localhost:3000/"
    }
  ],
  "security": [
    {
      "api_key": []
    }
  ],
  "tags": [
    {
      "name": "birds",
      "description": "All about birds",
      "externalDocs": {
        "description": "To get an API Key, visit",
        "url": "./getKey.html"
      }
    }
  ],
  "paths": {
    "/v2/birds": {
      "get": {
        "tags": ["birds"],
        "summary": "Get Birds List v2",
        "description": "Retrieve a paged list of birds",
        "operationId": "getBirdsV2",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Which page to fetch",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of page to fetch. Max 100",
            "schema": {
              "type": "integer",
              "default": 25
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Common name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sciName",
            "in": "query",
            "description": "Scientific name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Scientific order",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family",
            "in": "query",
            "description": "Scientific family",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Conservation status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Geographical region",
            "schema": {
              "type": "string",
              "enum": ["North America", "Western Europe"]
            }
          },
          {
            "name": "hasImg",
            "in": "query",
            "description": "Filter by only birds that have images",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "operator",
            "in": "query",
            "description": "operator to use",
            "schema": {
              "default": "AND",
              "enum": ["AND", "OR"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseBird"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Try providing an API-Key header",
            "content": {}
          }
        }
      }
    },
    "/birds": {
      "get": {
        "tags": ["birds"],
        "summary": "Get Birds List",
        "description": "Retrieve a list of birds - Limited to 200",
        "operationId": "getBirds",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Common name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sciName",
            "in": "query",
            "description": "Scientific name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Scientific order",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "family",
            "in": "query",
            "description": "Scientific family",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Conservation status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operator",
            "in": "query",
            "description": "operator to use",
            "schema": {
              "default": "AND",
              "enum": ["AND", "OR"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bird"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Try providing an API-Key header",
            "content": {}
          }
        },
        "deprecated": true
      }
    },
    "/birds/{birdId}": {
      "get": {
        "tags": ["birds"],
        "summary": "Get Bird",
        "description": "Bird. Includes recording links from Xeno Canto",
        "operationId": "getRecordings",
        "parameters": [
          {
            "name": "birdId",
            "in": "path",
            "description": "Bird id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BirdPlus"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Try providing an API-Key header",
            "content": {}
          }
        }
      }
    },
    "/checklists": {
      "get": {
        "tags": ["checklists"],
        "summary": "Get Checklists List",
        "description": "Retrieve a paged list of checklists",
        "operationId": "getChecklists",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseChecklist"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Try providing an API-Key header",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["checklists"],
        "summary": "Add a Checklist",
        "description": "Adds a checklist",
        "operationId": "addChecklist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Checklist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Checklist"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Try providing an API-Key header",
            "content": {}
          }
        }
      }
    },
    "/checklists/{checklistId}/entries": {
      "get": {
        "tags": ["checklists"],
        "summary": "Get Checklist CheckList",
        "description": "Retrieve checklist entries for checklist",
        "operationId": "getChecklistEntries",
        "parameters": [
          {
            "name": "checklistId",
            "in": "path",
            "description": "Checklist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Which page to fetch",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Size of page to fetch. Max 100",
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseChecklistEntry"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Try providing an API-Key header",
            "content": {}
          }
        }
      }
    },
    "/checklists/{checklistId}/entries/{birdId}": {
      "post": {
        "tags": ["checklists"],
        "summary": "Add CheckList entry",
        "description": "Adds checklist entry for checklist",
        "operationId": "postChecklistEntry",
        "parameters": [
          {
            "name": "checklistId",
            "in": "path",
            "description": "Checklist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "birdId",
            "in": "path",
            "description": "Bird id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecklistEntry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecklistEntry"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Try providing an API-Key header",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Bird": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "sciName": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "order": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "family": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "status": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "region": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["North America", "Western Europe"]
            }
          },
          "wingspanMin": {
            "type": "integer",
            "format": "int64"
          },
          "wingspanMax": {
            "type": "integer",
            "format": "int64"
          },
          "lengthMin": {
            "type": "integer",
            "format": "int64"
          },
          "lengthMax": {
            "type": "integer",
            "format": "int64"
          },
          "images": {
            "type": "array",
            "items": {
              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
              "type": "string",
              "format": "byte"
            }
          }
        }
      },
      "BirdPlus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Bird"
          },
          {
            "type": "object",
            "properties": {
              "recordings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recording"
                }
              }
            }
          }
        ]
      },
      "Recording": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "birdId": {
            "type": "integer",
            "format": "int64"
          },
          "sp": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "ssp": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "en": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "file": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "length": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "rec": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "bird-seen": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "rmk": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          }
        }
      },
      "PagedResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int64"
          },
          "pageSize": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedResponseBird": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedResponse"
          },
          {
            "type": "object",
            "properties": {
              "entities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Bird"
                }
              }
            }
          }
        ]
      },
      "PagedResponseChecklist": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedResponse"
          },
          {
            "type": "object",
            "properties": {
              "entities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Checklist"
                }
              }
            }
          }
        ]
      },
      "PagedResponseChecklistEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedResponse"
          },
          {
            "type": "object",
            "properties": {
              "entities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChecklistEntry"
                }
              }
            }
          }
        ]
      },
      "Checklist": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "byte"
          },
          "id": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "ChecklistEntry": {
        "type": "object",
        "properties": {
          "birdId": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "format": "byte"
          },
          "date-time": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "API-Key",
        "in": "header"
      }
    }
  }
}
