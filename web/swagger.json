{
  "swagger": "2.0",
  "info": {
    "description": "Nuthatch api - an api for birding",
    "version": "1.0.0",
    "title": "Nuthatch api",
    "contact": {
      "email": "lastelmsoft@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "birds",
      "description": "All about birds",
      "externalDocs": {
        "description": "To get an API Key, visit",
        "url": "./getKey.html"
      }
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/birds": {
      "get": {
        "tags": ["birds"],
        "summary": "Get Birds List",
        "description": "Retrieve a list of birds",
        "operationId": "getBirds",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Common name",
            "required": false,
            "type": "string"
          },
          {
            "name": "sciName",
            "in": "query",
            "description": "Scientific name",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Scientific order",
            "required": false,
            "type": "string"
          },
          {
            "name": "family",
            "in": "query",
            "description": "Scientific family",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Conservation status",
            "required": false,
            "type": "string"
          },
          {
            "name": "operator",
            "in": "query",
            "description": "operator to use",
            "required": false,
            "type": "enum",
            "enum": ["AND", "OR"],
            "default": "AND"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bird"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "401": {
            "description": "Unauthorized. Try providing an API-Key header"
          }
        }
      }
    },
    "/birds/{birdId}": {
      "get": {
        "tags": ["birds"],
        "summary": "Get Bird",
        "description": "Bird. Includes recording links from Xeno Canto",
        "operationId": "getRecordings",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "birdId",
            "in": "path",
            "description": "Bird id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BirdPlus"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "401": {
            "description": "Unauthorized. Try providing an API-Key header"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "API-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "definitions": {
    "Bird": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "format": "byte"
        },
        "sciName": {
          "type": "string",
          "format": "byte"
        },
        "order": {
          "type": "string",
          "format": "byte"
        },
        "family": {
          "type": "string",
          "format": "byte"
        },
        "status": {
          "type": "string",
          "format": "byte"
        },
        "wingspanMin": {
          "type": "integer",
          "format": "int64"
        },
        "wingspanMax": {
          "type": "integer",
          "format": "int64"
        },
        "lengthMin": {
          "type": "integer",
          "format": "int64"
        },
        "lengthMax": {
          "type": "integer",
          "format": "int64"
        },
        "recordings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recording"
          }
        }
      },
      "json": {
        "name": "Bird"
      }
    },
    "BirdPlus": {
      "allOf": [
        {
          "$ref": "#/definitions/Bird"
        },
        {
          "type": "object",
          "properties": {
            "recordings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recording"
              }
            }
          },
          "json": {
            "name": "BirdPlus"
          }
        }
      ]
    },
    "Recording": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "birdId": {
          "type": "integer",
          "format": "int64"
        },
        "sp": {
          "type": "string",
          "format": "byte"
        },
        "ssp": {
          "type": "string",
          "format": "byte"
        },
        "en": {
          "type": "string",
          "format": "byte"
        },
        "file": {
          "type": "string",
          "format": "byte"
        },
        "length": {
          "type": "string",
          "format": "byte"
        },
        "rec": {
          "type": "string",
          "format": "byte"
        },
        "bird-seen": {
          "type": "string",
          "format": "byte"
        },
        "rmk": {
          "type": "string",
          "format": "byte"
        }
      },
      "json": {
        "name": "Recording"
      }
    }
  }
}
